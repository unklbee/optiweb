# Generated by Django 4.2.21 on 2025-06-01 07:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('total_points', models.IntegerField(default=0)),
                ('membership_level', models.CharField(choices=[('BRONZE', 'Bronze'), ('SILVER', 'Silver'), ('GOLD', 'Gold'), ('PLATINUM', 'Platinum')], default='BRONZE', max_length=20)),
                ('email_notifications', models.BooleanField(default=True)),
                ('whatsapp_notifications', models.BooleanField(default=True)),
                ('promotional_offers', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Profile',
                'verbose_name_plural': 'Customer Profiles',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('reward_type', models.CharField(choices=[('DISCOUNT', 'Discount Percentage'), ('FIXED_AMOUNT', 'Fixed Amount Discount'), ('FREE_SERVICE', 'Free Service'), ('UPGRADE', 'Service Upgrade'), ('GIFT', 'Physical Gift')], max_length=20)),
                ('points_required', models.IntegerField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('usage_limit', models.IntegerField(blank=True, help_text='Max number of redemptions', null=True)),
                ('current_usage', models.IntegerField(default=0)),
                ('minimum_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('membership_levels', models.JSONField(default=list, help_text='List of membership levels')),
                ('applicable_services', models.ManyToManyField(blank=True, to='services.service')),
            ],
            options={
                'ordering': ['points_required'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('device_brand', models.CharField(max_length=50)),
                ('device_model', models.CharField(max_length=100)),
                ('device_serial', models.CharField(blank=True, max_length=100)),
                ('device_condition', models.TextField(help_text='Kondisi awal device saat diterima')),
                ('problem_description', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Menunggu Konfirmasi'), ('CONFIRMED', 'Dikonfirmasi'), ('IN_PROGRESS', 'Sedang Dikerjakan'), ('WAITING_PARTS', 'Menunggu Spare Part'), ('TESTING', 'Testing & Quality Check'), ('COMPLETED', 'Selesai'), ('DELIVERED', 'Sudah Diambil'), ('CANCELLED', 'Dibatalkan')], default='PENDING', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Normal'), ('MEDIUM', 'Prioritas'), ('HIGH', 'Express'), ('URGENT', 'Emergency')], default='LOW', max_length=10)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('actual_completion', models.DateTimeField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('assigned_technician', models.CharField(blank=True, max_length=100)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes for technicians')),
                ('customer_notes', models.TextField(blank=True, help_text='Notes visible to customer')),
                ('warranty_period', models.IntegerField(default=30, help_text='Warranty period in days')),
                ('warranty_expiry', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='customers.customerprofile')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service')),
            ],
            options={
                'verbose_name': 'Service Order',
                'verbose_name_plural': 'Service Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Menunggu Konfirmasi'), ('CONFIRMED', 'Dikonfirmasi'), ('IN_PROGRESS', 'Sedang Dikerjakan'), ('WAITING_PARTS', 'Menunggu Spare Part'), ('TESTING', 'Testing & Quality Check'), ('COMPLETED', 'Selesai'), ('DELIVERED', 'Sudah Diambil'), ('CANCELLED', 'Dibatalkan')], max_length=20)),
                ('message', models.TextField()),
                ('is_visible_to_customer', models.BooleanField(default=True)),
                ('created_by', models.CharField(default='System', max_length=100)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='customers.serviceorder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RewardRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('points_used', models.IntegerField()),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('redemption_code', models.CharField(max_length=20, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customerprofile')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.serviceorder')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.loyaltyreward')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('EARNED', 'Points Earned'), ('REDEEMED', 'Points Redeemed'), ('EXPIRED', 'Points Expired'), ('BONUS', 'Bonus Points'), ('ADJUSTMENT', 'Manual Adjustment')], max_length=20)),
                ('reason', models.CharField(max_length=255)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to='customers.customerprofile')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.serviceorder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
